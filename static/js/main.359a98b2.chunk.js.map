{"version":3,"sources":["components/Notification.jsx","pages/login/Login.jsx","pages/register/Register.jsx","pages/home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Notification","notificationStatus","className","Login","useState","loginValue","setLoginValue","passwordValue","setPasswordValue","setNotificationsStatus","onSubmit","e","preventDefault","axios","method","url","data","login","password","headers","then","response","status","catch","error","type","placeholder","value","onChange","target","to","Register","emailValue","setEmailValue","passwordConfirmValue","setPasswordConfirmValue","length","test","email","Home","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.359a98b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./notification.css\"\r\n\r\nexport const Notification = ({notificationStatus}) => {\r\n\r\n    return (\r\n        <div className=\"notificationBar\">\r\n            {notificationStatus}\r\n        </div>\r\n    )\r\n}\r\n","import \"./login.css\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Notification } from \"../../components/Notification\";\r\n\r\nexport const Login = () => {\r\n  const [loginValue, setLoginValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [notificationStatus, setNotificationsStatus] = useState(\"\");\r\n\r\n  /* Check for the basic input validity */\r\n  const valid = () => {\r\n    if (!loginValue || !passwordValue) {\r\n      setNotificationsStatus(\"Fill out both fields!\")\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /* Handle the login event */\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (valid()) {\r\n      axios({\r\n        method: \"post\",\r\n        url: \"login/\",\r\n        data: {\r\n          login: loginValue,\r\n          password: passwordValue,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n      })\r\n        .then((response) => setNotificationsStatus(`Request was successful with request code ${response.status}`))\r\n        .catch((error) => setNotificationsStatus(`Request failed with status code ${error.response.status}`));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">TechBase</h3>\r\n          <span className=\"loginDesc\">Test page for login.</span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <form className=\"loginBox\" onSubmit={handleLogin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Login\"\r\n              className=\"loginInput\"\r\n              value={loginValue}\r\n              onChange={(e) => setLoginValue(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"loginInput\"\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Log in\"\r\n              className=\"loginRegisterButton\"\r\n            />\r\n            <Link to=\"/register\" className=\"registerLink\">\r\n              <button className=\"loginButton\">Create a New Account</button>\r\n            </Link>\r\n            <Notification notificationStatus={notificationStatus} />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport \"./register.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Notification } from \"../../components/Notification\";\r\n\r\nexport default function Register() {\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [loginValue, setLoginValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [passwordConfirmValue, setPasswordConfirmValue] = useState(\"\");\r\n  const [notificationStatus, setNotificationsStatus] = useState(\"\");\r\n\r\n  /* Check email validity */\r\n  const isEmailValid = (email) => {\r\n    return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n      email\r\n    );\r\n  };\r\n\r\n  /* Check for the registration validity */\r\n  const valid = () => {\r\n    if (!emailValue || !loginValue || !passwordValue || !passwordConfirmValue) {\r\n      setNotificationsStatus(\"Fields can not be empty!\")\r\n      return false;\r\n    }\r\n    if (loginValue.length < 5 || passwordValue.length < 7) {\r\n      setNotificationsStatus(\"Not enough character length in login or password!\")\r\n      return false;\r\n    }\r\n    if (passwordValue !== passwordConfirmValue) {\r\n      setNotificationsStatus(\"Passwords do not match!\")\r\n      return false;\r\n    }\r\n    if (!isEmailValid(emailValue)) {\r\n      setNotificationsStatus(\"Email is not valid!\")\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /* Handle the Sign In event */\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    if (valid()) {\r\n      axios({\r\n        method: \"post\",\r\n        url: \"register/\",\r\n        data: {\r\n          login: loginValue,\r\n          password: passwordValue,\r\n          email: emailValue,\r\n        },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => setNotificationsStatus(`Request was successful with request code ${response.status}`))\r\n        .catch((error) => setNotificationsStatus(`Request failed with status code ${error.response.status}`));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginLeft\">\r\n          <h3 className=\"loginLogo\">TechBase</h3>\r\n          <span className=\"loginDesc\">Test page for registration.</span>\r\n        </div>\r\n        <div className=\"loginRight\">\r\n          <form className=\"loginBox\" onSubmit={handleRegister}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Login\"\r\n              className=\"loginInput\"\r\n              value={loginValue}\r\n              onChange={(e) => setLoginValue(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              className=\"loginInput\"\r\n              value={emailValue}\r\n              onChange={(e) => setEmailValue(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              className=\"loginInput\"\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              className=\"loginInput\"\r\n              value={passwordConfirmValue}\r\n              onChange={(e) => setPasswordConfirmValue(e.target.value )}\r\n            />\r\n            <input className=\"loginButton\" type=\"submit\" value=\"Sign Up\" />\r\n            <Link to=\"/login\" className=\"loginRegisterLink\">\r\n              <button className=\"loginRegisterButton\">\r\n                Log Into Existing Account\r\n              </button>\r\n            </Link>\r\n            <Notification notificationStatus={notificationStatus}/>\r\n          </form>       \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./home.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"homeWrapper\">\r\n        <h1>Welcome to the test page of TechBase</h1>\r\n        <h3>Sign up or use existing account to log in</h3>\r\n        <div className=\"navigationButtons\">\r\n          <Link to=\"/register\">\r\n            <button className=\"homeRegisterButton\">Create an Account</button>\r\n          </Link>\r\n          <Link to=\"/login\">\r\n            <button className=\"homeSignUpButton\">Sign in</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Login } from \"./pages/login/Login\";\nimport Register from \"./pages/register/Register\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./pages/home/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}